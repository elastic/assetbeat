env:
  GO_VERSION: $$(cat .go-version)
steps:
  - label: ":white_check_mark: Check"
    command:
      - ".buildkite/scripts/check.sh"
    agents:
      image: golang:$GO_VERSION
      cpu: "8"
      memory: "8G"
  - label: ":building_construction: Build"
    command:
      - ".buildkite/scripts/build.sh"
    agents:
      image: golang:$GO_VERSION
      cpu: "8"
      memory: "4G"
  - label: ":test_tube: Test"
    command:
      - ".buildkite/scripts/test.sh"
    agents:
      image: golang:$GO_VERSION
      cpu: "8"
      memory: "4G"
  - label: ":package: Package Assetbeat - Snapshot"
    key: "package-snapshot"
    command: "./.buildkite/scripts/package.sh snapshot"
    artifact_paths: "build/distributions/*"
    agents:
      image: golang:$GO_VERSION
      cpu: "8"
      memory: "4G"
  - label: ":rocket: Publishing Snapshot DRA artifacts"
    if: build.branch == 'main' || build.branch =~ /^[0-9]+\.[0-9]+\$/
    depends_on: "package-snapshot"
    command: "./.buildkite/scripts/publish.sh snapshot"
    agents:
      provider: "gcp"


  - label: ":package: Package Assetbeat - Staging"
    key: "package-staging"
    command: "./.buildkite/scripts/package.sh staging"
    artifact_paths: "build/distributions/*"
    agents:
      image: golang:$GO_VERSION
      cpu: "8"
      memory: "4G"

  - label: ":rocket: Publishing Staging DRA artifacts"
    if: build.branch =~ /^[0-9]+\.[0-9]+\$/
    depends_on: "package-staging"
    command: "./.buildkite/scripts/publish.sh staging"
    agents:
      provider: "gcp"
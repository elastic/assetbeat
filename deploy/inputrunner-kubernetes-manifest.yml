---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inputrunnerconfig
  namespace: kube-system
  labels:
    k8s-app: inputrunner
data:
  inputrunner.yml: |-
      inputrunner.inputs:
         - type: assets_k8s
           period: 600s
           kube_config: ""
           asset_types: ["node", "pod"]

      output.elasticsearch:
         hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
         username: ${ELASTICSEARCH_USERNAME}
         password: ${ELASTICSEARCH_PASSWORD}
         ssl.verification_mode: "none"

      logging.level: info
      logging.to_files: false
      logging.to_stderr: true
      logging.selectors: ["*"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inputrunner
  namespace: kube-system
  labels:
    k8s-app: inputrunner
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: inputrunner
  template:
    metadata:
      labels:
        k8s-app: inputrunner
    spec:
      serviceAccountName: inputrunner
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
         - name: inputrunner
           image: michaelkatsoulis/inputrunner:latest 
         #   imagePullPolicy: Never
         #   command: ['sleep 3600']
           env:
                  # The basic authentication username used to connect to Elasticsearch
                  # This user needs the privileges required to publish events to Elasticsearch.
                  - name: ELASTICSEARCH_USERNAME
                    value: "elastic"
                  # The basic authentication password used to connect to Elasticsearch
                  - name: ELASTICSEARCH_PASSWORD
                    value: "OzZGqri8fWfSwZrV5Ht5VtYn"
                  # The Elasticsearch host to communicate with
                  - name: ELASTICSEARCH_HOST
                    value: "https://snapshot-fd497c.es.us-west2.gcp.elastic-cloud.com"
                  # The Elasticsearch port to communicate with
                  - name: ELASTICSEARCH_PORT
                    value: "443"
           volumeMounts:
                  - name: config
                    mountPath: /usr/share/inputrunner/inputrunner.yml
                    readOnly: true
                    subPath: inputrunner.yml
      volumes:
        - name: config
          configMap:
            defaultMode: 0640
            name: inputrunnerconfig
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inputrunner
  namespace: kube-system
  labels:
    k8s-app: inputrunner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: inputrunner
  labels:
    k8s-app: inputrunner
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - namespaces
      - events
      - pods
      - services
      - configmaps
      # Needed for cloudbeat
      - serviceaccounts
      - persistentvolumes
      - persistentvolumeclaims
    verbs: ["get", "list", "watch"]
  # Enable this rule only if planing to use kubernetes_secrets provider
  #- apiGroups: [""]
  #  resources:
  #  - secrets
  #  verbs: ["get"]
  - apiGroups: ["extensions"]
    resources:
      - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources:
      - statefulsets
      - deployments
      - replicasets
      - daemonsets
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - ""
    resources:
      - nodes/stats
    verbs:
      - get
  - apiGroups: [ "batch" ]
    resources:
      - jobs
      - cronjobs
    verbs: [ "get", "list", "watch" ]
  # Needed for apiserver
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
  # Needed for cloudbeat
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - clusterrolebindings
      - clusterroles
      - rolebindings
      - roles
    verbs: ["get", "list", "watch"]
  # Needed for cloudbeat
  - apiGroups: ["policy"]
    resources:
      - podsecuritypolicies
    verbs: ["get", "list", "watch"]
  - apiGroups: [ "storage.k8s.io" ]
    resources:
      - storageclasses
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: inputrunner
subjects:
- kind: ServiceAccount
  name: inputrunner
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: inputrunner
  apiGroup: rbac.authorization.k8s.io
---